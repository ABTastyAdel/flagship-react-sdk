{"version":3,"sources":["../../../dist/FlagshipHooks.js","../../../dist/index.js","config/index.tsx","components/AppContainer/components/DemoInitialization/index.tsx","components/AppContainer/components/DemoUseFsModifications/index.tsx","components/AppContainer/components/DemoUseFsModificationsCache/index.tsx","components/AppContainer/components/DemoUseFsActivate/index.tsx","components/AppContainer/index.tsx","components/AppHeader/index.tsx","App.tsx","serviceWorker.ts","index.tsx","../../../dist/FlagshipContext.js","assets/Flagship-horizontal-product-white.png"],"names":["__rest","this","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__importDefault","mod","__esModule","defineProperty","exports","value","react_1","FlagshipContext_1","useFlagship","useContext","default","useFsActivate","modificationKeys","fsVisitor","Error","activateModifications","map","key","useFsModifications","modificationsRequested","activateAllModifications","useEffect","getModifications","useFsModificationsCache","getModificationsCache","__export","m","envId","sdkConfig","fetchNow","enableConsoleLogs","visitorData","id","context","isAuth","numberTransaction","isVip","sandbox","visitorId","DemoInitialization","onSubmitNewSettings","name","contextTemp","config","SettingContext","currSettings","currentSettings","setSettings","React","useState","newSettings","setNewSettings","handleVisitorContext","node","JSON","parse","currentTarget","parentElement","innerText","temp","checked","keyToRemove","keys","entries","reduce","reducer","Row","Col","className","Alert","variant","Heading","codeString","stringify","Form","Group","controlId","Label","Control","as","onChange","target","Check","type","onClick","label","style","display","justifyContent","Button","DemoUseFsModifications","defaultValue","activate","DemoUseFsModificationsCache","fsModifications","backgroundColor","btnColor","DemoUseFsActivate","AppContainer","Container","AppHeader","Navbar","fixed","Brand","href","alt","src","Logo","Nav","Link","NavDropdown","title","Item","eventKey","inline","createContext","App","Provider","onInitStart","console","log","onInitDone","loadingComponent","xs","color","height","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","__assign","assign","n","arguments","apply","__spreadArrays","il","r","Array","k","a","j","jl","__importStar","result","js_sdk_1","initState","FlagshipContext","FlagshipProvider","_a","children","modifications","_b","loading","state","setState","otherState","visitorInstance","initSdk","newVisitor","on","fetchedModifications","campaigns","values","createElement","defaultProps","undefined","FlagshipConsumer","Consumer","module"],"mappings":"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","file":"static/js/main.cf10b07d.chunk.js","sourcesContent":["\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar FlagshipContext_1 = __importDefault(require(\"./FlagshipContext\"));\n\nexports.useFlagship = function () {\n  var everything = __rest(react_1.useContext(FlagshipContext_1.default), []);\n\n  return everything;\n};\n\nexports.useFsActivate = function (modificationKeys) {\n  var fsVisitor = react_1.useContext(FlagshipContext_1.default).fsVisitor;\n\n  if (!fsVisitor) {\n    throw new Error('Error: flagship-react-sdk not correctly initialized... Make sure fsVisitor is ready.');\n  }\n\n  return fsVisitor.activateModifications(modificationKeys.map(function (key) {\n    return {\n      key: key\n    };\n  }));\n};\n\nexports.useFsModifications = function (modificationsRequested, activateAllModifications) {\n  if (activateAllModifications === void 0) {\n    activateAllModifications = false;\n  }\n\n  var fsVisitor = react_1.useContext(FlagshipContext_1.default).fsVisitor;\n\n  if (!fsVisitor) {\n    throw new Error('Error: flagship-react-sdk not correctly initialized... Make sure fsVisitor is ready.');\n  }\n\n  react_1.useEffect(function () {\n    fsVisitor.getModifications(modificationsRequested, activateAllModifications);\n  }, []);\n};\n\nexports.useFsModificationsCache = function (modificationsRequested, activateAllModifications) {\n  if (activateAllModifications === void 0) {\n    activateAllModifications = false;\n  }\n\n  var fsVisitor = react_1.useContext(FlagshipContext_1.default).fsVisitor;\n\n  if (!fsVisitor) {\n    throw new Error('Error: flagship-react-sdk not correctly initialized... Make sure fsVisitor is ready.');\n  }\n\n  return fsVisitor.getModificationsCache(modificationsRequested, activateAllModifications);\n};","\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./FlagshipContext\"));\n\n__export(require(\"./FlagshipHooks\"));","export default {\n    envId: 'bn1ab7m56qolupi5sa0g',\n    sdkConfig: {\n        fetchNow: true,\n        enableConsoleLogs: true\n    },\n    visitorData: {\n        id: 'test-vid',\n        context: { isAuth: true, numberTransaction: 12, isVip: false }\n    },\n    sandbox: {\n        envId: [\n            'bn1ab7m56qolupi5sa0g',\n            'bn1ab7m56qolupi5sa0g_1',\n            'bn1ab7m56qolupi5sa0g_2'\n        ],\n        visitorId: ['test-vid', 'test-vid_2', 'test-vid_3']\n    }\n};\n","import CodeBlock from '@tenon-io/tenon-codeblock';\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Alert, Col, Row, Form, Button } from 'react-bootstrap';\nimport config from '../../../../config';\nimport { SettingContext, AppSettings, SdkSettings } from '../../../../App';\n\nexport const DemoInitialization = ({ onSubmitNewSettings }) => {\n    const name = 'initialization';\n    const contextTemp = { ...config.visitorData.context };\n    const { currentSettings: currSettings, setSettings } = useContext(\n        SettingContext\n    ) as AppSettings;\n    const [newSettings, setNewSettings] = React.useState<SdkSettings>({\n        ...currSettings\n    });\n    const handleEnvId = (e) =>\n        setNewSettings({ ...newSettings, envId: e.target.value });\n    const handleVisitorId = (e) =>\n        setNewSettings({\n            ...newSettings,\n            visitorData: {\n                ...newSettings.visitorData,\n                id: e.target.value\n            }\n        });\n\n    const handleVisitorContext = (e) => {\n        const node = JSON.parse(e.currentTarget.parentElement.innerText);\n        const temp = { ...newSettings };\n        if (e.currentTarget.checked) {\n            setNewSettings({\n                ...newSettings,\n                visitorData: {\n                    ...newSettings.visitorData,\n                    context: { ...newSettings.visitorData.context, ...node }\n                }\n            });\n        } else {\n            const keyToRemove = Object.keys(node)[0];\n            setNewSettings({\n                ...newSettings,\n                visitorData: {\n                    ...newSettings.visitorData,\n                    context: Object.entries(temp.visitorData.context).reduce(\n                        (reducer, [key, value]) => {\n                            if (key === keyToRemove) {\n                                return reducer;\n                            }\n                            return { ...reducer, [key]: value };\n                        },\n                        {}\n                    )\n                }\n            });\n        }\n    };\n    return (\n        <Row>\n            <Col>\n                <a className=\"fsAnchor\" id={name} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{name}</Alert.Heading>\n                    <p>\n                        The <b>{name}</b> is proceed with{' '}\n                        <b>FlagshipProvider</b>. In this demo app, it is plugged\n                        like so:\n                    </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`\n\nimport React from 'react';\nimport { FlagshipProvider } from \"@flagship.io/react-sdk\";\n\nconst App: React.FC = () => (\n  <>\n      <FlagshipProvider\n      envId={${currSettings.envId}}\n      config={\n        ${JSON.stringify(currSettings.sdkConfig, null, 2)}\n      }\n      visitorData={\n        ${JSON.stringify(currSettings.visitorData, null, 2)}\n    }\n      onInitStart={() => {\n        console.log(\"init start\");\n      }}\n      onInitDone={() => {\n        console.log(\"init done\");\n      }}\n      loadingComponent={\n        <Container className=\"mt3\">\n          <Row>\n            <Col xs={12}>Loading Flagship React SDK...</Col>\n          </Row>\n        </Container>\n      }\n    >\n      <Header />\n      <AppContainer />\n    </FlagshipProvider>\n  </>\n);\n          `}\n                    />\n                    <p>\n                        To understand impact of each props, you can change some\n                        value dynamically here:{' '}\n                    </p>\n                    <Form>\n                        <Form.Group controlId=\"initForm.ControlSelect1\">\n                            <Form.Label>envId</Form.Label>\n                            <Form.Control as=\"select\" onChange={handleEnvId}>\n                                {config.sandbox.envId.map((id) => (\n                                    <option>{id}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"initForm.ControlSelect2\">\n                            <Form.Label>visitorId</Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                onChange={handleVisitorId}\n                            >\n                                {config.sandbox.visitorId.map((id) => (\n                                    <option>{id}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"initForm.ControlSelect3\">\n                            <Form.Label>visitor context</Form.Label>\n                            {Object.entries(contextTemp).map(([key, value]) => (\n                                <Form.Check\n                                    key={key}\n                                    type=\"checkbox\"\n                                    id={`default-${key}`}\n                                    checked={newSettings.visitorData.context.hasOwnProperty(\n                                        key\n                                    )}\n                                    onClick={handleVisitorContext}\n                                    label={JSON.stringify({ [key]: value })}\n                                />\n                            ))}\n                        </Form.Group>\n                    </Form>\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'flex-end'\n                        }}\n                    >\n                        <Button\n                            variant=\"secondary\"\n                            onClick={() => setSettings({ ...newSettings })}\n                        >\n                            Apply change\n                        </Button>\n                    </div>\n                    <div>Since we have set those settings:</div>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`${JSON.stringify(\n                            currSettings.sdkConfig,\n                            null,\n                            2\n                        )}`}\n                    />\n                    <div>\n                        When you change those values, you can notice the\n                        behavior of the SDK, on logs & network.\n                    </div>\n                    <div>\n                        It will impact the output of Flagship SDK Hooks as well,\n                        take a look below.\n                    </div>\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import { useFsModifications } from '@flagship.io/react-sdk';\nimport CodeBlock from '@tenon-io/tenon-codeblock';\nimport React, { useEffect, useState } from 'react';\nimport { Alert, Col, Row } from 'react-bootstrap';\n\nexport const DemoUseFsModifications = () => {\n    const demoHookName = 'useFsModifications';\n    const fsModifications = useFsModifications([\n        {\n            key: 'btnColor',\n            defaultValue: 'green',\n            activate: false\n        }\n    ]);\n    return (\n        <Row>\n            <Col>\n                <a className=\"fsAnchor\" id={demoHookName} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{demoHookName}</Alert.Heading>\n                    <p>\n                        Use <b>{demoHookName}</b> hook to get the modifications:\n                    </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`const todo = 'todo';`}\n                    />\n                    {/* <p>Output: </p>\n                    <div>\n                        <button style={{ color: fsModifications.btnColor }}>\n                            I'm a button customized with Flagship\n                        </button>\n                    </div>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`\n              <div>\n              <button style={{ color: ${fsModifications.btnColor} }}>\n                  I'm a button customized with Flagship\n              </button>\n          </div>\n              `}\n                    /> */}\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import { useFsModificationsCache } from '@flagship.io/react-sdk';\nimport CodeBlock from '@tenon-io/tenon-codeblock';\nimport React, { useEffect, useState } from 'react';\nimport { Alert, Col, Row } from 'react-bootstrap';\n\nexport const DemoUseFsModificationsCache = () => {\n    const fsModifications = useFsModificationsCache([\n        {\n            key: 'btnColor',\n            defaultValue: 'green',\n            activate: false\n        }\n    ]);\n    const demoHookName = 'useFsModificationsCache';\n    return (\n        <Row>\n            <Col>\n                <a className=\"fsAnchor\" id={demoHookName} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{demoHookName}</Alert.Heading>\n                    <p>\n                        Use <b>{demoHookName}</b> hook to get the modifications:\n                    </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`import { useFsModificationsCache } from '@flagship.io/react-sdk';\nconst fsModifications = useFsModificationsCache([\n  {\n      key: 'btnColor',\n      defaultValue: 'green',\n      activate: false\n  }\n]);              `}\n                    />\n                    <p>Output: </p>\n                    <div>\n                        <button\n                            style={{\n                                backgroundColor: fsModifications.btnColor\n                            }}\n                        >\n                            I'm a button customized with Flagship\n                        </button>\n                    </div>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`<div>\n    <button style={{ backgroundColor: ${fsModifications.btnColor} }}>\n        I'm a button customized with Flagship\n    </button>\n</div>              `}\n                    />\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import { useFsActivate } from '@flagship.io/react-sdk';\nimport CodeBlock from '@tenon-io/tenon-codeblock';\nimport React, { useEffect, useState } from 'react';\nimport { Alert, Col, Row } from 'react-bootstrap';\n\nexport const DemoUseFsActivate = () => {\n    useFsActivate(['btnColor', 'otherKey1', 'otherKey2']);\n    const demoHookName = 'useFsActivate';\n    return (\n        <Row>\n            <Col>\n                <a className=\"fsAnchor\" id={demoHookName} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{demoHookName}</Alert.Heading>\n                    <p>\n                        Use <b>{demoHookName}</b> hook to trigger activation of\n                        a modification:\n                    </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`useFsActivate([\n    'btnColor',\n    'otherKey1',\n    'otherKey2'\n]);                        `}\n                    />\n                    <div>\n                        In this example, keys{' '}\n                        <i>btnColor, otherKey1, otherKey2</i> have been\n                        activated. You can check on networks, a http request\n                        \"activate\" for each key specified in the array.\n                    </div>\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Alert, Button, Col, Container, Row } from 'react-bootstrap';\nimport { useFsModificationsCache } from '@flagship.io/react-sdk';\nimport CodeBlock from '@tenon-io/tenon-codeblock';\nimport { DemoInitialization } from './components/DemoInitialization';\nimport { DemoUseFsModifications } from './components/DemoUseFsModifications';\nimport { DemoUseFsModificationsCache } from './components/DemoUseFsModificationsCache';\nimport { DemoUseFsActivate } from './components/DemoUseFsActivate';\n\nexport const AppContainer = ({ onSubmitNewSettings }) => {\n    return (\n        <Container className=\"mt3\">\n            <DemoInitialization onSubmitNewSettings={onSubmitNewSettings} />\n            <DemoUseFsModifications />\n            <DemoUseFsModificationsCache />\n            <DemoUseFsActivate />\n        </Container>\n    );\n};\n","import React from 'react';\nimport { Navbar, Nav, Form, NavDropdown } from 'react-bootstrap';\nimport Logo from '../../assets/Flagship-horizontal-product-white.png';\n\nconst AppHeader: React.FC = () => (\n    <>\n        <Navbar className=\"fsNavbar\" fixed=\"top\">\n            <Navbar.Brand\n                href=\"https://github.com/abtasty/flagship-js-sdk\"\n                className=\"flex item-center\"\n            >\n                <img\n                    alt=\"Logo Flagship\"\n                    src={Logo}\n                    className=\"d-inline-block align-top logoAdjust\"\n                />\n                REACT SDK (Dev demo)\n            </Navbar.Brand>\n            <Nav className=\"mr-auto fsNav\">\n                <Nav.Link href=\"#initialization\">Initialization</Nav.Link>\n                <NavDropdown title=\"Fs Hooks\" id=\"nav-dropdown\">\n                    <NavDropdown.Item eventKey=\"4.1\" href=\"#useFsModifications\">\n                        useFsModifications\n                    </NavDropdown.Item>\n                    <NavDropdown.Item\n                        eventKey=\"4.2\"\n                        href=\"#useFsModificationsCache\"\n                    >\n                        useFsModificationsCache\n                    </NavDropdown.Item>\n                    <NavDropdown.Item eventKey=\"4.3\" href=\"#useFsActivate\">\n                        useFsActivate\n                    </NavDropdown.Item>\n                </NavDropdown>\n            </Nav>\n\n            <Form inline>\n                <Nav.Link href=\"https://github.com/abtasty/flagship-react-sdk\">\n                    Github\n                </Nav.Link>\n                <Nav.Link href=\"https://www.abtasty.com/solutions-product-teams/\">\n                    What is Flagship ?\n                </Nav.Link>\n            </Form>\n        </Navbar>\n    </>\n);\nexport default AppHeader;\n","import './App.css';\n\nimport { FlagshipProvider } from '@flagship.io/react-sdk';\nimport React, {\n    useEffect,\n    useState,\n    createContext,\n    Dispatch,\n    SetStateAction\n} from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\n\nimport { AppContainer } from './components/AppContainer';\nimport config from './config';\nimport AppHeader from './components/AppHeader';\ninterface VisitorContext {\n    [key: string]: any;\n}\nexport interface SdkSettings {\n    envId: string;\n    sdkConfig: {\n        fetchNow: boolean;\n        enableConsoleLogs: boolean;\n    };\n    visitorData: {\n        id: string;\n        context: VisitorContext;\n    };\n}\nexport interface AppSettings {\n    currentSettings: SdkSettings;\n    setSettings: Dispatch<SetStateAction<SdkSettings>>;\n}\n\nexport const SettingContext = createContext<{\n    currentSettings: SdkSettings;\n    setSettings: Dispatch<SetStateAction<SdkSettings>>;\n} | null>(null);\n\nconst App: React.FC = () => {\n    const [currentSettings, setSettings] = React.useState<SdkSettings>({\n        envId: config.envId,\n        sdkConfig: { ...config.sdkConfig },\n        visitorData: { ...config.visitorData }\n    });\n    return (\n        <>\n            <SettingContext.Provider value={{ currentSettings, setSettings }}>\n                <FlagshipProvider\n                    envId={currentSettings.envId}\n                    config={currentSettings.sdkConfig}\n                    visitorData={currentSettings.visitorData}\n                    onInitStart={() => {\n                        console.log('init start');\n                    }}\n                    onInitDone={() => {\n                        console.log('init done');\n                    }}\n                    loadingComponent={\n                        <Container className=\"mt3\">\n                            <Row>\n                                <Col\n                                    xs={12}\n                                    style={{\n                                        color: 'white',\n                                        height: '100vh',\n                                        fontSize: '5vw'\n                                    }}\n                                >\n                                    Loading Flagship React SDK...\n                                </Col>\n                            </Row>\n                        </Container>\n                    }\n                >\n                    <AppHeader />\n                    <AppContainer\n                        onSubmitNewSettings={(newSettings) =>\n                            setSettings({ ...currentSettings, ...newSettings })\n                        }\n                    />\n                </FlagshipProvider>\n            </SettingContext.Provider>\n        </>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar js_sdk_1 = __importDefault(require(\"@flagship.io/js-sdk\"));\n\nvar initState = {\n  fsVisitor: null,\n  fsModifications: null\n};\nvar FlagshipContext = react_1.default.createContext(__assign({}, initState));\n\nexports.FlagshipProvider = function (_a) {\n  var children = _a.children,\n      envId = _a.envId,\n      config = _a.config,\n      visitorData = _a.visitorData,\n      loadingComponent = _a.loadingComponent,\n      modifications = _a.modifications,\n      onInitStart = _a.onInitStart,\n      onInitDone = _a.onInitDone;\n  var id = visitorData.id,\n      context = visitorData.context;\n\n  var _b = react_1.useState(__assign(__assign({}, initState), {\n    loading: true\n  })),\n      state = _b[0],\n      setState = _b[1];\n\n  var loading = state.loading,\n      otherState = __rest(state, [\"loading\"]);\n\n  react_1.useEffect(function () {\n    var fsSdk = js_sdk_1.default.initSdk(envId, config);\n    var visitorInstance = fsSdk.newVisitor(id, context);\n    onInitStart();\n    visitorInstance.on('ready', function () {\n      if (modifications) {\n        visitorInstance.fetchedModifications = __assign({}, modifications);\n      }\n\n      setState(__assign(__assign({}, state), {\n        loading: false,\n        fsVisitor: visitorInstance,\n        fsModifications: visitorInstance.fetchedModifications && visitorInstance.fetchedModifications.campaigns || null\n      }));\n    });\n  }, __spreadArrays([envId, id], Object.values(context)));\n  react_1.useEffect(function () {\n    if (!state.loading) {\n      onInitDone({\n        fsVisitor: state.fsVisitor,\n        fsModifications: state.fsModifications\n      });\n    }\n  }, [state]);\n  return react_1.default.createElement(FlagshipContext.Provider, {\n    value: __assign({}, otherState)\n  }, loading ? loadingComponent : children);\n};\n\nexports.FlagshipProvider.defaultProps = {\n  config: {},\n  loadingComponent: null,\n  modifications: undefined,\n  onInitStart: function onInitStart() {},\n  onInitDone: function onInitDone() {}\n};\nexports.FlagshipConsumer = FlagshipContext.Consumer;\nexports.default = FlagshipContext;","module.exports = __webpack_public_path__ + \"static/media/Flagship-horizontal-product-white.6e8b90f3.png\";"],"sourceRoot":""}