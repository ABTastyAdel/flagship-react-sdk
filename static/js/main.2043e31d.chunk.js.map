{"version":3,"sources":["../../../dist/index.js","components/common/CodeBlock.tsx","config/index.tsx","components/AppContainer/components/DemoInitialization/index.tsx","components/AppContainer/components/DemoUseFsActivate/index.tsx","components/AppContainer/components/DemoUseFsModifications/index.tsx","components/AppContainer/components/DemoUseFsSynchronize/index.tsx","components/AppContainer/components/DemoUseFlagship/index.tsx","components/AppContainer/index.tsx","components/AppHeader/index.tsx","App.tsx","serviceWorker.ts","index.tsx","../../../dist/FlagshipContext.js","assets/Flagship-horizontal-product-white.png","../../../dist/FlagshipHooks.js"],"names":["__export","m","p","exports","hasOwnProperty","Object","defineProperty","value","SyntaxHighlighter","registerLanguage","jsx","CodeBlock","className","codeString","language","style","darcula","showLineNumbers","envId","sdkConfig","fetchNow","enableConsoleLogs","nodeEnv","visitorData","id","context","isAuth","numberTransaction","isVip","sandbox","visitorId","DemoInitialization","name","contextTemp","config","useContext","SettingContext","currSettings","currentSettings","setSettings","React","useState","newSettings","setNewSettings","handleVisitorContext","e","node","JSON","parse","currentTarget","parentElement","innerText","temp","checked","keyToRemove","keys","entries","reduce","reducer","key","Row","Col","Alert","variant","Heading","stringify","Form","Group","controlId","Label","Control","as","onChange","target","map","Check","type","label","display","justifyContent","Button","onClick","DemoUseFsActivate","useFsActivate","DemoUseFsModifications","fsModifications","useFsModifications","defaultValue","activate","backgroundColor","btnColor","DemoUseFsSynchronize","listenedValue","setValue","activateAllModifications","setActivate","useFsSynchronize","DemoUseFlagship","useFlagship","modifications","requested","fsStatus","status","AppContainer","Container","AppHeader","Navbar","fixed","Brand","href","alt","src","Logo","Nav","Link","NavDropdown","title","Item","eventKey","inline","createContext","App","Provider","onInitStart","console","log","onInitDone","fsVisitor","onSavingModificationsInCache","loadingComponent","xs","color","height","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","__assign","this","assign","t","s","i","n","arguments","length","prototype","call","apply","__spreadArrays","il","r","Array","k","a","j","jl","__importStar","mod","__esModule","result","__importDefault","react_1","js_sdk_1","initState","isLoading","lastRefresh","FlagshipContext","default","state","setState","FlagshipProvider","_a","children","_b","useEffect","visitorInstance","initSdk","newVisitor","on","args","fetchedModifications","Date","toISOString","campaigns","values","createElement","Fragment","defaultProps","undefined","FlagshipConsumer","Consumer","module","FlagshipContext_1","reportNoVisitor","Error","modificationKeys","applyEffectScope","activateModifications","synchronizeModifications","getCacheModifications","modificationsRequested","getModificationsCache","_c","activateAll","_d"],"mappings":"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","file":"static/js/main.2043e31d.chunk.js","sourcesContent":["\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n__export(require(\"./FlagshipContext\"));\n\n__export(require(\"./FlagshipHooks\"));","import React from 'react';\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport jsx from 'react-syntax-highlighter/dist/esm/languages/prism/jsx';\nimport { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';\nSyntaxHighlighter.registerLanguage('jsx', jsx);\n\ntype CodeBlockProps = {\n    className?: string;\n    codeString: string;\n};\n\nconst CodeBlock: React.FC<CodeBlockProps> = ({ className, codeString }) => {\n    return (\n        <div className={className}>\n            <SyntaxHighlighter\n                language=\"javascript\"\n                style={darcula}\n                showLineNumbers\n            >\n                {codeString}\n            </SyntaxHighlighter>\n        </div>\n    );\n};\n\nexport default CodeBlock;\n","export default {\n    envId: 'bn1ab7m56qolupi5sa0g',\n    sdkConfig: {\n        fetchNow: true,\n        enableConsoleLogs: true,\n        nodeEnv: 'development'\n    },\n    visitorData: {\n        id: 'test-vid',\n        context: { isAuth: true, numberTransaction: 12, isVip: false }\n    },\n    sandbox: {\n        envId: [\n            'bn1ab7m56qolupi5sa0g',\n            'bn1ab7m56qolupi5sa0g_1',\n            'bn1ab7m56qolupi5sa0g_2'\n        ],\n        nodeEnv: ['development', 'production'],\n        visitorId: ['test-vid', 'test-vid_2', 'test-vid_3']\n    }\n};\n","import CodeBlock from '../../../common/CodeBlock';\nimport React, { useContext } from 'react';\nimport { Alert, Button, Col, Form, Row } from 'react-bootstrap';\n\nimport { AppSettings, SdkSettings, SettingContext } from '../../../../App';\nimport config from '../../../../config';\n\nexport const DemoInitialization = () => {\n    const name = 'initialization';\n    const contextTemp = { ...config.visitorData.context };\n    const { currentSettings: currSettings, setSettings } = useContext(\n        SettingContext\n    ) as AppSettings;\n    const [newSettings, setNewSettings] = React.useState<SdkSettings>({\n        ...currSettings\n    });\n    const handleEnvId = (e) =>\n        setNewSettings({ ...newSettings, envId: e.target.value });\n\n    const handleNodeEnv = (e) =>\n        setNewSettings({\n            ...newSettings,\n            sdkConfig: {\n                ...newSettings.sdkConfig,\n                nodeEnv: e.target.value\n            }\n        });\n\n    const handleVisitorId = (e) =>\n        setNewSettings({\n            ...newSettings,\n            visitorData: {\n                ...newSettings.visitorData,\n                id: e.target.value\n            }\n        });\n\n    const handleVisitorContext = (e) => {\n        const node = JSON.parse(e.currentTarget.parentElement.innerText);\n        const temp = { ...newSettings };\n        if (e.currentTarget.checked) {\n            setNewSettings({\n                ...newSettings,\n                visitorData: {\n                    ...newSettings.visitorData,\n                    context: { ...newSettings.visitorData.context, ...node }\n                }\n            });\n        } else {\n            const keyToRemove = Object.keys(node)[0];\n            setNewSettings({\n                ...newSettings,\n                visitorData: {\n                    ...newSettings.visitorData,\n                    context: Object.entries(temp.visitorData.context).reduce(\n                        (reducer, [key, value]) => {\n                            if (key === keyToRemove) {\n                                return reducer;\n                            }\n                            return { ...reducer, [key]: value };\n                        },\n                        {}\n                    )\n                }\n            });\n        }\n    };\n    return (\n        <Row>\n            <Col>\n                <div className=\"fsAnchor\" id={name} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{name}</Alert.Heading>\n                    <p>\n                        The <b>{name}</b> is proceed with{' '}\n                        <b>FlagshipProvider</b>. In this demo app, it is plugged\n                        like so:\n                    </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`import React from 'react';\nimport { FlagshipProvider } from \"@flagship.io/react-sdk\";\n\nconst App: React.FC = () => (\n  <>\n      <FlagshipProvider\n      envId={${currSettings.envId}}\n      config={\n        ${JSON.stringify(currSettings.sdkConfig, null, 2)}\n      }\n      visitorData={\n        ${JSON.stringify(currSettings.visitorData, null, 2)}\n    }\n      onInitStart={() => {\n        console.log(\"init start\");\n      }}\n      onInitDone={() => {\n        console.log(\"init done\");\n      }}\n      loadingComponent={\n        <Container className=\"mt3\">\n          <Row>\n            <Col xs={12}>Loading Flagship React SDK...</Col>\n          </Row>\n        </Container>\n      }\n    >\n      <Header />\n      <AppContainer />\n    </FlagshipProvider>\n  </>\n);          `}\n                    />\n                    <p>\n                        To understand impact of each props, you can change some\n                        value dynamically here:{' '}\n                    </p>\n                    <h3>\n                        1 - Playing with <i>config</i>\n                    </h3>\n                    <Form>\n                        <Form.Group controlId=\"initForm.Control1.1\">\n                            <Form.Label>envId</Form.Label>\n                            <Form.Control as=\"select\" onChange={handleEnvId}>\n                                {config.sandbox.envId.map((id) => (\n                                    <option key={id}>{id}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"initForm.Control1.11\">\n                            <Form.Label>nodeEnv</Form.Label>\n                            <Form.Control as=\"select\" onChange={handleNodeEnv}>\n                                {config.sandbox.nodeEnv.map((id) => (\n                                    <option key={id}>{id}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"initForm.Control1.2\">\n                            <Form.Check\n                                type=\"checkbox\"\n                                checked={newSettings.sdkConfig.fetchNow}\n                                onChange={(e) =>\n                                    setNewSettings({\n                                        ...newSettings,\n                                        sdkConfig: {\n                                            ...newSettings.sdkConfig,\n                                            fetchNow: e.currentTarget.checked\n                                        }\n                                    })\n                                }\n                                label={`fetchNow=${newSettings.sdkConfig.fetchNow}`}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"initForm.Control1.3\">\n                            <Form.Check\n                                type=\"checkbox\"\n                                checked={\n                                    newSettings.sdkConfig.enableConsoleLogs\n                                }\n                                onChange={(e) =>\n                                    setNewSettings({\n                                        ...newSettings,\n                                        sdkConfig: {\n                                            ...newSettings.sdkConfig,\n                                            enableConsoleLogs:\n                                                e.currentTarget.checked\n                                        }\n                                    })\n                                }\n                                label={`enableConsoleLogs=${newSettings.sdkConfig.enableConsoleLogs}`}\n                            />\n                        </Form.Group>\n                    </Form>\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'flex-end'\n                        }}\n                    >\n                        <Button\n                            variant=\"secondary\"\n                            onClick={() => setSettings({ ...newSettings })}\n                        >\n                            Apply change\n                        </Button>\n                    </div>\n                    <h3>\n                        2 - Playing with <i>visitorData</i>\n                    </h3>\n                    <Form>\n                        <Form.Group controlId=\"initForm.ControlSelect2\">\n                            <Form.Label>visitorId</Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                onChange={handleVisitorId}\n                            >\n                                {config.sandbox.visitorId.map((id) => (\n                                    <option key={id}>{id}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"initForm.ControlSelect3\">\n                            <Form.Label>visitor context</Form.Label>\n                            {Object.entries(contextTemp).map(([key, value]) => (\n                                <Form.Check\n                                    key={key}\n                                    type=\"checkbox\"\n                                    id={`default-${key}`}\n                                    checked={newSettings.visitorData.context.hasOwnProperty(\n                                        key\n                                    )}\n                                    onChange={handleVisitorContext}\n                                    label={JSON.stringify({ [key]: value })}\n                                />\n                            ))}\n                        </Form.Group>\n                    </Form>\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'flex-end'\n                        }}\n                    >\n                        <Button\n                            variant=\"secondary\"\n                            onClick={() => setSettings({ ...newSettings })}\n                        >\n                            Apply change\n                        </Button>\n                    </div>\n                    <div>Since we have set those settings:</div>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`${JSON.stringify(\n                            currSettings.sdkConfig,\n                            null,\n                            2\n                        )}`}\n                    />\n                    <div>\n                        When you change those values, you can notice the\n                        behavior of the SDK, on logs & network.\n                    </div>\n                    <div>\n                        It will impact the output of Flagship SDK Hooks as well,\n                        take a look below.\n                    </div>\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import { useFsActivate } from '@flagship.io/react-sdk';\nimport CodeBlock from '../../../common/CodeBlock';\nimport React from 'react';\nimport { Alert, Col, Row } from 'react-bootstrap';\n\nexport const DemoUseFsActivate = () => {\n    useFsActivate(['btnColor', 'otherKey1', 'otherKey2']);\n    const demoHookName = 'useFsActivate';\n    return (\n        <Row>\n            <Col>\n                <div className=\"fsAnchor\" id={demoHookName} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{demoHookName}</Alert.Heading>\n                    <p>\n                        Use <b>{demoHookName}</b> hook to trigger activation of\n                        a modification:\n                    </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`useFsActivate([\n    'btnColor',\n    'otherKey1',\n    'otherKey2'\n]);                        `}\n                    />\n                    <div>\n                        In this example, keys{' '}\n                        <i>btnColor, otherKey1, otherKey2</i> have been\n                        activated. You can check on networks, a http request\n                        \"activate\" for each key specified in the array.\n                    </div>\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import { useFsModifications } from '@flagship.io/react-sdk';\nimport React from 'react';\nimport { Alert, Col, Row } from 'react-bootstrap';\nimport CodeBlock from '../../../common/CodeBlock';\n\nexport const DemoUseFsModifications = () => {\n    const fsModifications = useFsModifications([\n        {\n            key: 'btnColor',\n            defaultValue: 'green',\n            activate: false\n        }\n    ]);\n    const demoHookName = 'useFsModifications';\n    return (\n        <Row>\n            <Col>\n                <div className=\"fsAnchor\" id={demoHookName} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{demoHookName}</Alert.Heading>\n                    <p>\n                        Use <b>{demoHookName}</b> hook to get the modifications:\n                    </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`import { useFsModifications } from '@flagship.io/react-sdk';\nconst fsModifications = useFsModifications([\n  {\n      key: 'btnColor',\n      defaultValue: 'green',\n      activate: false\n  }\n]);              `}\n                    />\n                    <p>Output: </p>\n                    <div>\n                        <button\n                            style={{\n                                backgroundColor: fsModifications.btnColor\n                            }}\n                        >\n                            I'm a button customized with Flagship\n                        </button>\n                    </div>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`<div>\n    <button style={{ backgroundColor: ${fsModifications.btnColor} }}>\n        I'm a button customized with Flagship\n    </button>\n</div>              `}\n                    />\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import { useFsSynchronize } from '@flagship.io/react-sdk';\nimport React from 'react';\nimport { Alert, Col, Form, Row } from 'react-bootstrap';\n\nimport CodeBlock from '../../../common/CodeBlock';\n\nexport const DemoUseFsSynchronize: React.FC = () => {\n    const [listenedValue, setValue] = React.useState(false);\n    const [activateAllModifications, setActivate] = React.useState(false);\n    useFsSynchronize([listenedValue], activateAllModifications);\n    const demoHookName = 'useFsSynchronize';\n    return (\n        <Row>\n            <Col>\n                <div className=\"fsAnchor\" id={demoHookName} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{demoHookName}</Alert.Heading>\n                    <p>\n                        Use <b>{demoHookName}</b> hook to trigger activation of\n                        a modification:\n                    </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`useFsActivate([listenedValue], activateAllModifications);`}\n                    ></CodeBlock>\n                    <Form>\n                        <Form.Group controlId=\"demoFsSynchronize.ControlSelect1\">\n                            <Form.Label>listenedValue</Form.Label>\n                            <Form.Check\n                                type=\"checkbox\"\n                                checked={listenedValue}\n                                onChange={(e) =>\n                                    setValue(e.currentTarget.checked)\n                                }\n                                label={`listenedValue=${listenedValue}`}\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"demoFsSynchronize.ControlSelect2\">\n                            <Form.Label>listenedValue</Form.Label>\n                            <Form.Check\n                                type=\"checkbox\"\n                                checked={activateAllModifications}\n                                onChange={(e) =>\n                                    setActivate(e.currentTarget.checked)\n                                }\n                                label={`activateAllModifications=${activateAllModifications}`}\n                            />\n                        </Form.Group>\n                    </Form>\n                    <div>\n                        Switch value of <b>listenedValue</b> will trigger a\n                        synchronize as it is set in the first argument of{' '}\n                        <b>useFsActivate</b>.\n                    </div>\n                    <div>\n                        You can also notice that enabling{' '}\n                        <b>activateAllModifications</b> to true will modify the\n                        payload sent to the Flagship API and thus trigger an\n                        activate.\n                    </div>\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import { useFlagship } from '@flagship.io/react-sdk';\nimport React from 'react';\nimport { Alert, Col, Row } from 'react-bootstrap';\nimport CodeBlock from '../../../common/CodeBlock';\n\nexport const DemoUseFlagship = () => {\n    const { modifications: fsModifications, status: fsStatus } = useFlagship({\n        modifications: {\n            requested: [\n                {\n                    key: 'btnColor',\n                    defaultValue: 'green',\n                    activate: false\n                }\n            ]\n        }\n    });\n    const demoHookName = 'useFlagship';\n    return (\n        <Row>\n            <Col>\n                <div className=\"fsAnchor\" id={demoHookName} />\n                <Alert variant=\"dark\" className=\"fs-alert demoHook\">\n                    <Alert.Heading>{demoHookName}</Alert.Heading>\n                    <p>\n                        Use <b>{demoHookName}</b> hook to get the modifications\n                        and the SDK status (more feature for this hook soon):\n                    </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`import { useFlagship } from '@flagship.io/react-sdk';\nconst { modifications: fsModifications, status: fsStatus } = useFlagship({\n    modifications: {\n        requested: [\n            {\n                key: 'btnColor',\n                defaultValue: 'green',\n                activate: false\n            }\n        ]\n    }\n});            `}\n                    />\n                    <p>fsModifications output: </p>\n                    <div>\n                        <button\n                            style={{\n                                backgroundColor: fsModifications.btnColor\n                            }}\n                        >\n                            I'm a button customized with Flagship\n                        </button>\n                    </div>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`<div>\n    <button style={{ backgroundColor: ${fsModifications.btnColor} }}>\n        I'm a button customized with Flagship\n    </button>\n</div>              `}\n                    />\n                    <p>fsStatus output: </p>\n                    <CodeBlock\n                        className=\"mv3\"\n                        codeString={`\nfsStatus=${JSON.stringify(fsStatus, null, 2)};\n                        `}\n                    />\n                </Alert>\n            </Col>\n        </Row>\n    );\n};\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nimport { DemoInitialization } from './components/DemoInitialization';\nimport { DemoUseFsActivate } from './components/DemoUseFsActivate';\nimport { DemoUseFsModifications } from './components/DemoUseFsModifications';\nimport { DemoUseFsSynchronize } from './components/DemoUseFsSynchronize';\nimport { DemoUseFlagship } from './components/DemoUseFlagship';\n\nexport const AppContainer: React.FC = () => {\n    return (\n        <Container className=\"mt3\">\n            <DemoInitialization />\n            <DemoUseFlagship />\n            <DemoUseFsModifications />\n            <DemoUseFsActivate />\n            <DemoUseFsSynchronize />\n        </Container>\n    );\n};\n","import React from 'react';\nimport { Navbar, Nav, Form, NavDropdown } from 'react-bootstrap';\nimport Logo from '../../assets/Flagship-horizontal-product-white.png';\n\nconst AppHeader: React.FC = () => (\n    <>\n        <Navbar className=\"fsNavbar\" fixed=\"top\">\n            <Navbar.Brand\n                href=\"https://github.com/abtasty/flagship-js-sdk\"\n                className=\"flex item-center\"\n            >\n                <img\n                    alt=\"Logo Flagship\"\n                    src={Logo}\n                    className=\"d-inline-block align-top logoAdjust\"\n                />\n                REACT SDK (Dev demo)\n            </Navbar.Brand>\n            <Nav className=\"mr-auto fsNav\">\n                <Nav.Link href=\"#initialization\">Initialization</Nav.Link>\n                <NavDropdown title=\"Fs Hooks\" id=\"nav-dropdown\">\n                    <NavDropdown.Item eventKey=\"4.0\" href=\"#useFlagship\">\n                        useFlagship\n                    </NavDropdown.Item>\n                    <NavDropdown.Item eventKey=\"4.1\" href=\"#useFsModifications\">\n                        useFsModifications\n                    </NavDropdown.Item>\n                    <NavDropdown.Item eventKey=\"4.2\" href=\"#useFsActivate\">\n                        useFsActivate\n                    </NavDropdown.Item>\n                    <NavDropdown.Item eventKey=\"4.3\" href=\"#useFsSynchronize\">\n                        useFsSynchronize\n                    </NavDropdown.Item>\n                </NavDropdown>\n            </Nav>\n\n            <Form inline>\n                <Nav.Link href=\"https://github.com/abtasty/flagship-react-sdk\">\n                    Github\n                </Nav.Link>\n                <Nav.Link href=\"https://www.abtasty.com/solutions-product-teams/\">\n                    What is Flagship ?\n                </Nav.Link>\n            </Form>\n        </Navbar>\n    </>\n);\nexport default AppHeader;\n","import './App.css';\n\nimport { FlagshipProvider } from '@flagship.io/react-sdk';\nimport React, { createContext, Dispatch, SetStateAction } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\n\nimport { AppContainer } from './components/AppContainer';\nimport config from './config';\nimport AppHeader from './components/AppHeader';\nimport { FlagshipSdkConfig } from '@flagship.io/js-sdk';\ninterface VisitorContext {\n    [key: string]: any;\n}\nexport interface SdkSettings {\n    envId: string;\n    sdkConfig: FlagshipSdkConfig;\n    visitorData: {\n        id: string;\n        context: VisitorContext;\n    };\n}\nexport interface AppSettings {\n    currentSettings: SdkSettings;\n    setSettings: Dispatch<SetStateAction<SdkSettings>>;\n}\n\nexport const SettingContext = createContext<{\n    currentSettings: SdkSettings;\n    setSettings: Dispatch<SetStateAction<SdkSettings>>;\n} | null>(null);\n\nconst App: React.FC = () => {\n    const [currentSettings, setSettings] = React.useState<SdkSettings>({\n        envId: config.envId,\n        sdkConfig: { ...config.sdkConfig },\n        visitorData: { ...config.visitorData }\n    });\n    return (\n        <>\n            <SettingContext.Provider value={{ currentSettings, setSettings }}>\n                <FlagshipProvider\n                    envId={currentSettings.envId}\n                    config={currentSettings.sdkConfig}\n                    visitorData={currentSettings.visitorData}\n                    onInitStart={() => {\n                        console.log('React SDK init start');\n                    }}\n                    onInitDone={(fsVisitor) => {\n                        console.log(JSON.stringify(fsVisitor));\n                        console.log('React SDK init done');\n                    }}\n                    onSavingModificationsInCache={\n                        (/* modifications */) =>\n                            console.log(\n                                'React SDK saved modifications in cache'\n                            )\n                    }\n                    loadingComponent={\n                        <Container className=\"mt3\">\n                            <Row>\n                                <Col\n                                    xs={12}\n                                    style={{\n                                        color: 'white',\n                                        height: '100vh',\n                                        fontSize: '5vw'\n                                    }}\n                                >\n                                    Loading Flagship React SDK...\n                                </Col>\n                            </Row>\n                        </Container>\n                    }\n                >\n                    <AppHeader />\n                    <AppContainer />\n                </FlagshipProvider>\n            </SettingContext.Provider>\n        </>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar js_sdk_1 = __importDefault(require(\"@flagship.io/js-sdk\"));\n\nvar initState = {\n  fsVisitor: null,\n  fsModifications: null,\n  status: {\n    isLoading: true,\n    lastRefresh: null\n  }\n};\nvar FlagshipContext = react_1.default.createContext({\n  state: __assign({}, initState),\n  setState: null\n});\n\nexports.FlagshipProvider = function (_a) {\n  var children = _a.children,\n      envId = _a.envId,\n      config = _a.config,\n      visitorData = _a.visitorData,\n      loadingComponent = _a.loadingComponent,\n      modifications = _a.modifications,\n      onSavingModificationsInCache = _a.onSavingModificationsInCache,\n      onInitStart = _a.onInitStart,\n      onInitDone = _a.onInitDone;\n  var id = visitorData.id,\n      context = visitorData.context;\n\n  var _b = react_1.useState(__assign({}, initState)),\n      state = _b[0],\n      setState = _b[1];\n\n  var isLoading = state.status.isLoading,\n      fsVisitor = state.fsVisitor;\n  react_1.useEffect(function () {\n    var fsSdk = js_sdk_1.default.initSdk(envId, config);\n    var visitorInstance = fsSdk.newVisitor(id, context);\n    setState(__assign(__assign({}, state), {\n      status: __assign(__assign({}, state.status), {\n        isLoading: true\n      }),\n      fsVisitor: visitorInstance\n    }));\n    onInitStart();\n    visitorInstance.on('saveCache', function (args) {\n      onSavingModificationsInCache(args);\n    });\n    visitorInstance.on('ready', function () {\n      if (modifications) {\n        visitorInstance.fetchedModifications = __assign({}, modifications);\n      }\n\n      setState(__assign(__assign({}, state), {\n        status: {\n          isLoading: false,\n          lastRefresh: new Date().toISOString()\n        },\n        fsVisitor: visitorInstance,\n        fsModifications: visitorInstance.fetchedModifications && visitorInstance.fetchedModifications.campaigns || null\n      }));\n    });\n  }, __spreadArrays([envId, id], Object.values(config), Object.values(context)));\n  react_1.useEffect(function () {\n    if (!isLoading) {\n      onInitDone({\n        fsVisitor: state.fsVisitor,\n        fsModifications: state.fsModifications\n      });\n    }\n  }, [state]);\n\n  var handlingDisplay = function handlingDisplay() {\n    var isFirstInit = !fsVisitor;\n\n    if (loadingComponent && isFirstInit) {\n      return react_1.default.createElement(react_1.default.Fragment, null, loadingComponent);\n    }\n\n    return react_1.default.createElement(react_1.default.Fragment, null, children);\n  };\n\n  return react_1.default.createElement(FlagshipContext.Provider, {\n    value: {\n      state: state,\n      setState: setState\n    }\n  }, handlingDisplay());\n};\n\nexports.FlagshipProvider.defaultProps = {\n  config: {},\n  loadingComponent: undefined,\n  modifications: undefined,\n  onInitStart: function onInitStart() {},\n  onInitDone: function onInitDone() {}\n};\nexports.FlagshipConsumer = FlagshipContext.Consumer;\nexports.default = FlagshipContext;","module.exports = __webpack_public_path__ + \"static/media/Flagship-horizontal-product-white.6e8b90f3.png\";","\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar FlagshipContext_1 = __importDefault(require(\"./FlagshipContext\"));\n\nvar reportNoVisitor = function reportNoVisitor() {\n  throw new Error('Error: flagship-react-sdk not correctly initialized... Make sure fsVisitor is ready.');\n};\n\nexports.useFsActivate = function (modificationKeys, applyEffectScope) {\n  if (applyEffectScope === void 0) {\n    applyEffectScope = [];\n  }\n\n  var fsVisitor = react_1.useContext(FlagshipContext_1.default).state.fsVisitor;\n\n  if (!fsVisitor) {\n    reportNoVisitor();\n  } else {\n    react_1.useEffect(function () {\n      fsVisitor.activateModifications(modificationKeys.map(function (key) {\n        return {\n          key: key\n        };\n      }));\n    }, applyEffectScope);\n  }\n};\n\nexports.useFsSynchronize = function (applyEffectScope, activateAllModifications) {\n  if (applyEffectScope === void 0) {\n    applyEffectScope = [];\n  }\n\n  if (activateAllModifications === void 0) {\n    activateAllModifications = false;\n  }\n\n  var _a = react_1.useContext(FlagshipContext_1.default),\n      state = _a.state,\n      setState = _a.setState;\n\n  var fsVisitor = state.fsVisitor;\n\n  if (!fsVisitor) {\n    reportNoVisitor();\n  } else {\n    react_1.useEffect(function () {\n      fsVisitor.synchronizeModifications(activateAllModifications).then(function () {\n        if (setState) {\n          setState(__assign(__assign({}, state), {\n            fsVisitor: fsVisitor,\n            status: __assign(__assign({}, state.status), {\n              isLoading: false,\n              lastRefresh: new Date().toISOString()\n            })\n          }));\n        } else {\n          throw new Error('Error: useFsSynchronize > useEffect, setState is undefined');\n        }\n      });\n    }, applyEffectScope);\n  }\n};\n\nvar getCacheModifications = function getCacheModifications(fsVisitor, modificationsRequested, activateAllModifications) {\n  if (activateAllModifications === void 0) {\n    activateAllModifications = false;\n  }\n\n  if (!fsVisitor) {\n    reportNoVisitor();\n    return {};\n  }\n\n  return fsVisitor.getModificationsCache(modificationsRequested, activateAllModifications);\n};\n\nexports.useFsModifications = function (modificationsRequested, activateAllModifications) {\n  if (activateAllModifications === void 0) {\n    activateAllModifications = false;\n  }\n\n  var fsVisitor = react_1.useContext(FlagshipContext_1.default).state.fsVisitor;\n  return getCacheModifications(fsVisitor, modificationsRequested, activateAllModifications);\n};\n\nexports.useFlagship = function (_a) {\n  var _b = _a.modifications,\n      modificationsRequested = _b.requested,\n      _c = _b.activateAll,\n      activateAllModifications = _c === void 0 ? false : _c;\n  var _d = react_1.useContext(FlagshipContext_1.default).state,\n      fsVisitor = _d.fsVisitor,\n      status = _d.status;\n  return {\n    modifications: getCacheModifications(fsVisitor, modificationsRequested, activateAllModifications),\n    status: status\n  };\n};"],"sourceRoot":""}